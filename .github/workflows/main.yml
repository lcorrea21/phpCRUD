name: Build Application

on:
  push:
    branches:
      - master
      - release
  pull_request:
    branches:
      - master
      - release
      - 'feature/**'
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      branch_rps_name:
        description: "The branch rps name"
        value: ${{ jobs.build-and-test.outputs.output1 }}
      
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      output1: ${{ steps.debug.outputs.branch_rps_name }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      BRANCH_NAME2: ${{ github.head_ref || github.ref_name }} 
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: Github Object
        run: |
          cat << OBJECT
          ${{ toJson(github) }}
          OBJECT
          
      - name: Validate Dependabot
        if: ${{ env.ARM_CLIENT_ID != '' &&  github.actor != 'dependabot[bot]' || !startsWith(env.BRANCH_NAME2, 'dependabot') }}
        run: echo "El actor ${{ github.actor }} no es un Dependabot o la rama ${{env.BRANCH_NAME2}} fue creada por un Dependabot."

      - name: Get branch name (merge)
        if: |
          github.event_name != 'pull_request' &&
          (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/release')
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr [:upper:] [:lower:] | tr /_ - | cut -d "-" -f 2-3)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: |
          github.event_name == 'pull_request' && env.BRANCH_NAME2 != 'master' && env.BRANCH_NAME2 != 'release'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${{ env.BRANCH_NAME2 }} | tr [:upper:] [:lower:] | tr /_ - | cut -d "-" -f 2-3)" >> $GITHUB_ENV
        
      - name: Debug
        id: debug
        run: echo  "BRANCH_RPS_NAME=${{ env.BRANCH_NAME }}" >> $GITHUB_OUTPUT

      - name: Test
        id: test
        run: echo  "TF_VAR_http=https://${{ env.BRANCH_NAME }}-qa.rps.revalizesoftware.com/graphql"
